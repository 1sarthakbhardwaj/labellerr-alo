[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "labellerr-alo"
version = "0.1.0"
description = "Agentic Labeling Orchestrator - Autonomous labeling pipelines powered by AI agents"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "Labellerr Team", email = "support@labellerr.com"}
]
maintainers = [
    {name = "Labellerr Team", email = "support@labellerr.com"}
]
keywords = [
    "machine-learning",
    "computer-vision",
    "data-labeling",
    "annotation",
    "ai-agents",
    "active-learning",
    "mlops",
    "labellerr"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "labellerr-sdk>=1.0.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "requests>=2.28.0",
    "tqdm>=4.65.0",
    "python-dotenv>=1.0.0",
    "numpy>=1.21.0",
    "pillow>=9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]

agents = [
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "ultralytics>=8.0.0",
]

all = [
    "labellerr-alo[dev,agents]",
]

[project.urls]
Homepage = "https://github.com/YOUR_USERNAME/labellerr-alo"
Documentation = "https://labellerr-alo.readthedocs.io"
Repository = "https://github.com/YOUR_USERNAME/labellerr-alo"
Issues = "https://github.com/YOUR_USERNAME/labellerr-alo/issues"
Changelog = "https://github.com/YOUR_USERNAME/labellerr-alo/releases"

[project.scripts]
alo = "alo.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["alo*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.eggs
  | \.tox
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=alo",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.coverage.run]
source = ["alo"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
